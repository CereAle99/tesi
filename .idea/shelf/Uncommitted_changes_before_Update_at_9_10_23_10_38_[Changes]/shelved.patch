Index: segmentation_processing/resizePET_Ale.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import numpy as np\nimport nibabel as nib\nfrom scipy.ndimage import zoom\nimport os\n\nif __name__ == \"__main__\":\n    # All patients path\n    path = \"data/test_PET\"\n\n    for folder in os.listdir(path):\n        print(\"Patient: \", folder)\n        # Get label path\n        patient_path = os.path.join(path, folder)\n        image_path = os.path.join(patient_path, \"PT.nii\")\n\n        # Load label\n        img_obj = nib.load(image_path)\n        img = img_obj.get_fdata()\n        print(\"Initial shape: \", img.shape)\n        print(img_obj.header)\n        print(img_obj.affine)\n\n        # Evaluate the ratio of the images dimension\n        CT_PET_ratio = np.array([512, 512, 239]) / np.array(img.shape)\n\n        # Transform label\n        img = zoom(img, zoom=CT_PET_ratio)\n        print(\"Final shape: \", img.shape)\n\n        # Modify file header and affine\n        new_header = img_obj.header\n        new_header['dim'] = [3, 512, 512, 239, 1, 1, 1, 1]\n        new_header['pixdim'] = [1.,\n                                5.46875/CT_PET_ratio[0],\n                                5.46875/CT_PET_ratio[1],\n                                3.27/CT_PET_ratio[2],\n                                0.,\n                                0.,\n                                0.,\n                                0.]\n        new_header['srow_x'] = [-5.46875/CT_PET_ratio[0], 0., 0., 347.26562]\n        new_header['srow_y'] = [0., -5.46875/CT_PET_ratio[1], 0., 347.26562]\n        new_header['srow_z'] = [0., 0., 3.27/CT_PET_ratio[2], -771.7]\n        new_affine = np.array([\n                                [-5.46875 / CT_PET_ratio[0], 0., 0., 347.26562],\n                                [0., -5.46875 / CT_PET_ratio[1], 0., 347.26562],\n                                [0., 0., 3.27 / CT_PET_ratio[2], -771.7],\n                                [0., 0., 0., 1.]\n                            ])\n\n        img_resized = nib.Nifti1Image(img, new_affine, header=new_header)\n        print(img_resized.header)\n\n        # Save label\n        save_path = os.path.join(patient_path, \"PET-Resized\")\n        os.makedirs(save_path, exist_ok=True)\n        if not os.path.isfile(save_path + '/PT.nii'):\n            print(\"Saving PET\")\n            nib.save(img_resized, save_path + '/PT.nii')\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/segmentation_processing/resizePET_Ale.py b/segmentation_processing/resizePET_Ale.py
--- a/segmentation_processing/resizePET_Ale.py	(revision 5b9a8413065cde262a9504bfe6b45f22614e73cd)
+++ b/segmentation_processing/resizePET_Ale.py	(date 1696837239106)
@@ -30,23 +30,27 @@
         # Modify file header and affine
         new_header = img_obj.header
         new_header['dim'] = [3, 512, 512, 239, 1, 1, 1, 1]
-        new_header['pixdim'] = [1.,
+        new_header['pixdim'] = [
+                                1.,
                                 5.46875/CT_PET_ratio[0],
                                 5.46875/CT_PET_ratio[1],
                                 3.27/CT_PET_ratio[2],
                                 0.,
                                 0.,
                                 0.,
-                                0.]
+                                0.
+                               ]
         new_header['srow_x'] = [-5.46875/CT_PET_ratio[0], 0., 0., 347.26562]
         new_header['srow_y'] = [0., -5.46875/CT_PET_ratio[1], 0., 347.26562]
         new_header['srow_z'] = [0., 0., 3.27/CT_PET_ratio[2], -771.7]
-        new_affine = np.array([
+        new_affine = np.array(
+                              [
                                 [-5.46875 / CT_PET_ratio[0], 0., 0., 347.26562],
                                 [0., -5.46875 / CT_PET_ratio[1], 0., 347.26562],
                                 [0., 0., 3.27 / CT_PET_ratio[2], -771.7],
                                 [0., 0., 0., 1.]
-                            ])
+                              ]
+                             )
 
         img_resized = nib.Nifti1Image(img, new_affine, header=new_header)
         print(img_resized.header)
@@ -57,4 +61,3 @@
         if not os.path.isfile(save_path + '/PT.nii'):
             print("Saving PET")
             nib.save(img_resized, save_path + '/PT.nii')
-
